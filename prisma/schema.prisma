// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String        @id @unique
  name             String?
  email            String        @unique
  stripeCustomerId String?       @unique
  colorScheme      String        @default("theme-blue")
  isPublic         Boolean       @default(true)
  image            String?
  Subscription     Subscription?
  Enrollment       Enrollment[]
  reviews          Review[]      // Added relation to reviews
}

model Subscription {
  stripeSubscriptionId String   @id @unique
  interval             String
  status               String
  planId               String
  currentPeriodStart   Int
  currentPeriodEnd     Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  user                 User     @relation(fields: [userId], references: [id])
  userId               String   @unique
}

model Courses {
  id                        String @id @unique
  code                      String @unique
  name                      String
  credits                   Int
  scheduledHours            Int?
  selfStudyHours            Int?
  mainFieldOfStudy          String[]
  advanced                  Boolean
  semester                  Int[]
  period                    Int[]
  block                     Int[]
  campus                    String
  exclusions                String[]
  offeredFor                String[]
  prerequisites             String
  recommendedPrerequisites  String
  learningOutcomes          String
  content                   String
  teachingMethods           String
  examinations              Examinations[]
  enrollment                Enrollment[]
  reviews                   Review[] // Added relation to reviews
}

model Examinations {
  id                  String @id @unique
  courseId            String
  code                String
  name                String
  credits             Int
  gradingScale        String
  course              Courses @relation(fields: [courseId], references: [id])
}

model Enrollment {
  id                  String  @id @unique
  semester            Int
  user                User    @relation(fields: [userId], references: [id])
  userId              String
  course              Courses @relation(fields: [courseId], references: [id])
  courseId            String
}

model Review {
  id          String   @id @unique @default(uuid())
  rating      Int      
  comment     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  course      Courses  @relation(fields: [courseId], references: [id])
  courseId    String
}
